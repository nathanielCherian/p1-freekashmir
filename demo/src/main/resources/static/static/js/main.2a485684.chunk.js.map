{"version":3,"sources":["fonts/exil.ttf","components/jumbotron.tsx","components/navbar.tsx","components/selection.tsx","pages/pages.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Jumbotron","useEffect","canvas","document","getElementById","console","log","ctx","getContext","centerX","width","centerY","height","fillStyle","fillRect","beginPath","arc","Math","PI","fill","className","id","Navbar","props","link","text","to","SelectionBox","Homepage","GetStarted","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode"],"mappings":"0PAAe,I,6BCiDAA,EA3CG,WA6Bd,OA3BAC,qBAAU,WACN,IAAMC,EAASC,SAASC,eAAe,eACvCC,QAAQC,IAAIJ,GAEZ,IAAIK,EAAML,EAAOM,WAAW,MACtBC,EAAUP,EAAOQ,MAAQ,EACzBC,EAAUT,EAAOU,OAAS,EAIhCL,EAAIM,UAAY,QAChBN,EAAIO,SAAS,EAAG,EAAGZ,EAAOQ,MAAOR,EAAOU,QAExCL,EAAIQ,YACJR,EAAIS,IAAIP,EAASE,EAAQ,GAPV,GAOsB,EAAG,EAAIM,KAAKC,IAAI,GACrDX,EAAIM,UAAY,UAChBN,EAAIY,OAEJZ,EAAIQ,YACJR,EAAIS,IAAIP,EAAQ,IAAKE,EAAQ,GAZd,GAY0B,EAAG,EAAIM,KAAKC,IAAI,GACzDX,EAAIM,UAAY,UAChBN,EAAIY,UAOJ,qBAAKC,UAAU,YAAf,SACI,qBAAKA,UAAU,iBAAf,SACI,sBAAKA,UAAU,kBAAf,UACI,wBAAQC,GAAG,gBACX,qBAAID,UAAU,0BAAd,sBAAiD,uBAAjD,yBCrBLE,G,MAfA,SAACC,GAAsC,IAE3CC,EAAcD,EAAdC,KAAMC,EAAQF,EAARE,KAEb,OACI,qBAAKL,UAAU,SAAf,SACI,qBAAKA,UAAU,qBAAf,SACI,sBAAMA,UAAU,wBAAhB,SAAwC,cAAC,IAAD,CAAMM,GAAIF,EAAV,SAAiBC,YCI1DE,G,MAZM,SAACJ,GAAyB,IAEpCE,EAAQF,EAARE,KAEP,OACI,qBAAKL,UAAU,gBAAf,SACI,6BAAKK,QCHXG,EAAW,WACb,OACI,sBAAKR,UAAU,WAAf,UACI,cAAC,EAAD,CAAQI,KAAK,eAAeC,KAAK,gBACjC,cAAC,EAAD,QAKNI,EAAa,WACf,OACI,sBAAKT,UAAU,WAAf,UACI,cAAC,EAAD,CAAQI,KAAK,IAAIC,KAAK,SACtB,qBAAKL,UAAU,mBAAf,SACI,sBAAKA,UAAU,sBAAf,UACI,cAAC,EAAD,CAAcK,KAAK,mBACnB,cAAC,EAAD,CAAcA,KAAK,8B,MCexBK,MA5Bf,WAEE,OAEI,cAAC,IAAD,UAEE,qBAAKV,UAAU,MAAf,SAGA,eAAC,IAAD,WAEE,cAAC,IAAD,CAAOW,KAAK,eAAZ,SACE,cAAC,EAAD,MAGF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,EAAD,cCXGC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,iBACE,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFvC,SAASC,eAAe,SAM1B4B,M","file":"static/js/main.2a485684.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/exil.cbdfb905.ttf\";","// @ts-nocheck\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport Button from './button';\r\nimport '../scss/components/jumbotron.scss'\r\n\r\nconst Jumbotron = () => {\r\n\r\n    useEffect(() => {\r\n        const canvas = document.getElementById(\"text-canvas\")\r\n        console.log(canvas)\r\n        \r\n        var ctx = canvas.getContext(\"2d\");\r\n        const centerX = canvas.width / 2;\r\n        const centerY = canvas.height / 2;\r\n        const radius = 50;\r\n\r\n\r\n        ctx.fillStyle = \"white\";\r\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n        ctx.beginPath();\r\n        ctx.arc(centerX, centerY+30, radius, 0, 2 * Math.PI, false);\r\n        ctx.fillStyle = '#b279a7';\r\n        ctx.fill();\r\n        \r\n        ctx.beginPath();\r\n        ctx.arc(centerX-150, centerY-30, radius, 0, 2 * Math.PI, false);\r\n        ctx.fillStyle = '#b279a7';\r\n        ctx.fill();\r\n\r\n    });\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"jumbotron\">\r\n            <div className=\"text-container\">\r\n                <div className=\"text-background\">\r\n                    <canvas id=\"text-canvas\" ></canvas>\r\n                    <h1 className=\"large-text unselectable\">Night At <br/> The Museum</h1>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n//                    \r\n\r\nexport default Jumbotron;","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport '../scss/components/navbar.scss'\r\n\r\nconst Navbar = (props:{link:string, text:string}) => {\r\n\r\n    const {link, text} = props;\r\n\r\n    return (\r\n        <nav className=\"navbar\">\r\n            <div className=\"nav-item logo-text\">\r\n                <span className=\"get-started left-side\"><Link to={link}>{text}</Link></span>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport '../scss/components/selection.scss'\r\n\r\nconst SelectionBox = (props:{text:string}) => {\r\n\r\n    const {text} = props;\r\n\r\n    return(\r\n        <div className=\"selection-box\">\r\n            <h1>{text}</h1>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default SelectionBox;","import React from \"react\";\r\nimport Jumbotron from \"../components/jumbotron\";\r\nimport Navbar from \"../components/navbar\";\r\nimport SelectionBox from \"../components/selection\";\r\n\r\n\r\nconst Homepage = () => {\r\n    return (\r\n        <div className=\"panel-bg\">\r\n            <Navbar link=\"/get-started\" text=\"Get Started\"/>\r\n            <Jumbotron/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst GetStarted = () => {\r\n    return(\r\n        <div className=\"panel-bg\">\r\n            <Navbar link=\"/\" text=\"Home\"/>\r\n            <div className=\"jumbotron-center\">\r\n                <div className=\"selection-container\">\r\n                    <SelectionBox text=\"I am a Student\"/>\r\n                    <SelectionBox text=\"I am an Educator\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {Homepage, GetStarted};","import React, {useState}from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport {GetStarted, Homepage} from './pages/pages';\nimport './scss/main.scss'\n\nfunction App() {\n\n  return (\n\n      <Router>\n\n        <div className=\"App\">\n\n\n        <Switch>\n\n          <Route path=\"/get-started\">\n            <GetStarted/>\n          </Route>\n\n          <Route path=\"/\">\n            <Homepage/>\n          </Route>\n\n        </Switch>\n\n        </div>\n\n      </Router>\n\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\n//import ReactDOM from 'react-dom';\nimport { render } from 'react-snapshot';\nimport './index.css';\nimport './fonts/exil.ttf'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nrender(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}